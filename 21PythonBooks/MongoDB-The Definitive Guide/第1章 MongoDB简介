
1. 易于使用
MongoDB是一个面向文档(document-oriented)的数据库，而不是关系型数据库
“文档”(document)模型 --> 取代关系数据模型中的 “行”概念
通过在文档中嵌入文档和数组，面向文档的方法能够仅使用一条记录来表现复杂的层次关系，这与使用现代面向对象语言的开发者对数据的看法一致

没有预定义模式(predefined schema)：文档的键(key)和值(value)不再是固定的类型和大小
    - 根据需要添加或删除字段变得容易，快速迭代
    - 尝试大量数据模型，从中选择一个最好的


2. 易于扩展
APP、Web...--> 数据集不可思议地增长， 纵向扩展(scale up)和横向扩展(scale out)
纵向扩展：使用计算能力更强的机器，大型机一般都非常昂贵且有物理极限
横向扩展：通过分区将数据分散到更多机器上，易于扩展但管理困难

MongoDB的设计采用横向扩展。
MongoDB能自动处理跨集群的数据和负载，自动重新分配文档，以及将用户请求路由到正确的机器上


3. 丰富的功能
除了创建、读取、更新和删除数据之外，还提供一系列不断扩展的独特功能
- 索引(indexing)：MongoDB支持通用二级索引，允许多种快速查询，且提供唯一索引、复合索引、地理空间索引、以及全文索引
- 聚合(aggregation)：MongoDB支持“聚合管道”(aggregation pipeline)。用户通过简单的片段创建负载的聚合，并通过数据库自动优化
- 特殊的数据类型：某个时刻过期的数据，如会话(session)，固定大小的集合，如日志
- 文件存储(file storage)，用于存储大文件和文件元数据

MongoDB并不具备一些关系数据库中很普遍的功能，如连接(join)和复杂的多行事务(multirow transaction)
省略这些功能是出于架构上的考虑(为了得到更好的扩展性)，在分布式系统中这两个功能难以高效地实现

4. 卓越的性能
- MongoDB对文档进行动态填充(dynamic padding)
- 预分配数据文件以利用额外的空间来换取稳定的性能
- 把尽可能多的内存用作缓存(cache)
- 试图为每次查询自动选择正确的索引

只要有可能，数据库服务器就会将处理的和逻辑交个客户端(通过驱动程序或用户的应用程序代码来实现)



